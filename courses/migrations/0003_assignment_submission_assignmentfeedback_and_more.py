# Generated by Django 4.2.14 on 2025-09-02 08:32

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('courses', '0002_alter_coursecategory_options_alter_video_options_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('instructions', models.TextField(help_text='Detailed instructions for completing the assignment')),
                ('order_index', models.PositiveIntegerField(default=1)),
                ('is_preview', models.BooleanField(default=False, help_text='If true, this assignment is visible to non-enrolled students')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('due_date', models.DateTimeField(blank=True, help_text='Optional due date for the assignment', null=True)),
                ('available_from', models.DateTimeField(default=django.utils.timezone.now, help_text='When this assignment becomes available to students')),
                ('max_points', models.PositiveIntegerField(default=100, help_text='Maximum points possible for this assignment')),
                ('attachment', models.FileField(blank=True, help_text='Optional file attachment (worksheet, template, etc.)', null=True, upload_to='assignment_files/')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='courses.course')),
            ],
            options={
                'ordering': ['course', 'order_index'],
            },
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_content', models.TextField(blank=True, help_text='Written response for the assignment')),
                ('file', models.FileField(blank=True, help_text='File upload for the assignment', null=True, upload_to='assignment_submissions/')),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('submitted', 'Submitted'), ('resubmitted', 'Resubmitted'), ('graded', 'Graded'), ('returned', 'Returned')], default='submitted', max_length=20)),
                ('points_earned', models.PositiveIntegerField(blank=True, null=True)),
                ('graded_at', models.DateTimeField(blank=True, null=True)),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='courses.assignment')),
                ('graded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='graded_submissions', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignment_submissions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-submitted_at'],
                'unique_together': {('assignment', 'student')},
            },
        ),
        migrations.CreateModel(
            name='AssignmentFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='feedback_attachments/')),
                ('submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback', to='courses.submission')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='given_feedback', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='CourseProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('progress_percent', models.PositiveSmallIntegerField(default=0)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('completed_items', models.PositiveIntegerField(default=0)),
                ('total_items', models.PositiveIntegerField(default=0)),
                ('total_time_spent', models.DurationField(default=datetime.timedelta)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_progress', to='courses.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_progress', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['student', 'last_activity'], name='courses_cou_student_9dcf54_idx'), models.Index(fields=['course', 'progress_percent'], name='courses_cou_course__a62911_idx')],
                'unique_together': {('student', 'course')},
            },
        ),
        migrations.CreateModel(
            name='ContentProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('first_accessed', models.DateTimeField(auto_now_add=True)),
                ('last_accessed', models.DateTimeField(auto_now=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('progress_percent', models.PositiveSmallIntegerField(default=0)),
                ('total_time_spent', models.DurationField(default=datetime.timedelta)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='content_progress_records', to='courses.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='content_progress', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Content progress records',
                'indexes': [models.Index(fields=['student', 'course', 'is_completed'], name='courses_con_student_e9e276_idx'), models.Index(fields=['content_type', 'object_id'], name='courses_con_content_36f6e8_idx')],
                'unique_together': {('student', 'content_type', 'object_id')},
            },
        ),
    ]
